import math

#Functions used to find the correct numbers
def isSquare(x :int):
    return math.sqrt(x).is_integer()

def verify(x :int):
    if x <= 0:
        return False
    
    y = x**2 - 1
    if y % 3 != 0:
        return False
    return isSquare(y // 3)


#Gettting initial list of corresponding nunmbers
listofnum = []
for i in range(65):
    for x in range(10 ** i, 10 ** (i + 1)):
        if verify(x):
            listofnum.append(x)
            break
print('Initial list:\n', listofnum, '\n')

#Issues
index = []
for i in range(65):
    if math.floor(math.log(listofnum[i], 10)) != i:
        index.append(i)
print('Index of non-matching numbers:\n', index, '\n')
#index = [18, 21, 23, 24, 26, 27, 29, 30, 31, 33, 36, 39, 42, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58, 60, 62, 63]

#Finding replacements 
replacements = []
for i in index:
    for x in range(10 ** i + 10 ** (i - 1), 10 ** (i + 1) + 10 ** (i - 1)):
        if verify(x):
            if math.floor(math.log(x, 10)) == i:
                replacements.append(x)
                break
        break
print('Replacement numbers for non-matching numbers:\n', replacements, '\n')

#Getting Final list
#lst = [1, 26, 362, 1351, 18817, 262087, 3650401, 13623482, 138907099, 1013220139, 10002289250, 100000082198, 1000000003127, 10000000001018, 100000000000096, 1000000000000009, 10000000000000000, 100000000000000000, 1000000000000000000, 10000000000000000000, 100000000000000000000, 1000000000000000000000, 10000000000000000000000, 100000000000000000000000, 1000000000000000000000000, 10000000000000000000000000, 100000000000000000000000000, 1000000000000000000000000000, 10000000000000000000000000000, 100000000000000000000000000000, 1000000000000000000000000000000, 10000000000000000000000000000000, 100000000000000000000000000000000, 1000000000000000000000000000000000, 10000000000000000000000000000000000, 100000000000000000000000000000000000, 1000000000000000000000000000000000000, 10000000000000000000000000000000000000, 100000000000000000000000000000000000000, 1000000000000000000000000000000000000000, 10000000000000000000000000000000000000000, 100000000000000000000000000000000000000000, 1000000000000000000000000000000000000000000, 10000000000000000000000000000000000000000000, 100000000000000000000000000000000000000000000, 1000000000000000000000000000000000000000000000, 10000000000000000000000000000000000000000000000, 100000000000000000000000000000000000000000000000, 1000000000000000000000000000000000000000000000000, 10000000000000000000000000000000000000000000000000, 100000000000000000000000000000000000000000000000000, 1000000000000000000000000000000000000000000000000000, 10000000000000000000000000000000000000000000000000000, 100000000000000000000000000000000000000000000000000000, 1000000000000000000000000000000000000000000000000000000, 10000000000000000000000000000000000000000000000000000000, 100000000000000000000000000000000000000000000000000000000, 1000000000000000000000000000000000000000000000000000000000, 10000000000000000000000000000000000000000000000000000000000, 100000000000000000000000000000000000000000000000000000000000, 1000000000000000000000000000000000000000000000000000000000000, 10000000000000000000000000000000000000000000000000000000000000, 100000000000000000000000000000000000000000000000000000000000000, 1000000000000000000000000000000000000000000000000000000000000000, 10000000000000000000000000000000000000000000000000000000000000000, 100000000000000000000000000000000000000000000000000000000000000000]
#replacements = [1100000000000000000, 1100000000000000000000, 110000000000000000000000, 1100000000000000000000000, 110000000000000000000000000, 1100000000000000000000000000, 110000000000000000000000000000, 1100000000000000000000000000000, 11000000000000000000000000000000, 1100000000000000000000000000000000, 1100000000000000000000000000000000000, 1100000000000000000000000000000000000000, 1100000000000000000000000000000000000000000, 1100000000000000000000000000000000000000000000, 11000000000000000000000000000000000000000000000, 1100000000000000000000000000000000000000000000000, 11000000000000000000000000000000000000000000000000, 1100000000000000000000000000000000000000000000000000, 11000000000000000000000000000000000000000000000000000, 1100000000000000000000000000000000000000000000000000000, 11000000000000000000000000000000000000000000000000000000, 1100000000000000000000000000000000000000000000000000000000, 11000000000000000000000000000000000000000000000000000000000, 1100000000000000000000000000000000000000000000000000000000000, 110000000000000000000000000000000000000000000000000000000000000, 1100000000000000000000000000000000000000000000000000000000000000]
#index = [18, 21, 23, 24, 26, 27, 29, 30, 31, 33, 36, 39, 42, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58, 60, 62, 63]

for x in range(len(replacements)):
    listofnum[index[x]] = replacements[x]

print('Final list of numbers from 0 to 64:\n', listofnum)