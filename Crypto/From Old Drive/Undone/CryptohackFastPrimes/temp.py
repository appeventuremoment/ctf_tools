from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
from Crypto.Util.number import *


M = 166589903787325219380851695350896256250980509594874862046961683989710
#with open('key.pem','r') as file:
#	out = RSA.importKey(file.read())
#	print(out.e)
#	print(out.n)

e = 65537
n = 4013610727845242593703438523892210066915884608065890652809524328518978287424865087812690502446831525755541263621651398962044653615723751218715649008058509
p = 51894141255108267693828471848483688186015845988173648228318286999011443419469
q = 77342270837753916396402614215980760127245056504361515489809293852222206596161
ct = long_to_bytes(int("249d72cd1d287b1a15a3881f2bff5788bc4bf62c789f2df44d88aae805b54c9a94b8944c0ba798f70062b66160fee312b98879f1dd5d17b33095feb3c5830d28", 16))
d = pow(65537, -1, (p - 1) * (q - 1))

key = RSA.construct((n, e, d))
cipher = PKCS1_OAEP.new(key)
pt = cipher.decrypt(ct).decode()
print(pt)
